#include <bits/stdc++.h> 

pair<int,int> missingAndRepeating(vector<int> &arr, int n)
{
	
 //   int n=arr.size();
    long long int sumn=(n*(n+1))/2;
    long long int squareSumn=(n*(n+1)*(2*n+1))/6;
    for(int i=0;i<n;i++){
        sumn-=(long long int)arr[i];
        squareSumn-=((long long int)arr[i]*(long long int)arr[i]);
    }
    
   // cout<<sum<<" "<<sumn<<" "<<sumn<<" "<<squareSumn<<endl;
    long long int a1=1,b1=-1,c1=sumn;
    long long int a2=1,b2=1,c2=squareSumn/c1;
    long long int ansx=(int)(((b2*c1)-(b1*c2))/((b2*a1)-(b1*a2)));
    long long int ansy=(int)(((a2*c1)-(a1*c2))/((a2*b1)-(a1*b2)));
    pair<int,int> pair1;
    pair1.first=ansx;
    pair1.second=ansy;
    return pair1;
}

